{"version":3,"file":"static/js/387.6f938b31.chunk.js","mappings":"qPAEaA,EAAQC,EAAAA,GAAAA,GAAH,6CAILC,EAAWD,EAAAA,GAAAA,GAAH,8FAORE,EAAWF,EAAAA,GAAAA,GAAH,wKAURG,EAAYH,EAAAA,GAAAA,IAAH,yH,SCuBtB,EAzCa,WACX,IAAQI,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAgBC,EAAAA,EAAAA,SAAO,GAW7B,OATAC,EAAAA,EAAAA,YAAU,WACJF,EAAcG,UAChBH,EAAcG,SAAU,IAE1BC,EAAAA,EAAAA,IAAWT,GACRU,KAAKN,GACLO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACZ,KAGF,+BACE,UAACH,EAAD,WACGM,EAAQY,KACP,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,UAAhC,OACED,IACE,UAACpB,EAAD,YACE,gBACEsB,IAAG,yCAAoCF,GACvCG,IAAKJ,EACLK,MAAM,WAER,UAACvB,EAAD,YACE,SAACJ,EAAD,UAAQsB,KACR,uCAAeE,UARJH,EAFnB,KAeF,SAAC,EAAAO,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,UAKT,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h4`\n  font-weight: 700;\n`;\n\nexport const FilmList = styled.ul`\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const FilmItem = styled.li`\n  display: flex;\n  gap: 20px;\n  width: 400px;\n  height: 150px;\n  box-shadow: 3px 2px 2px grey;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const CardTitle = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  font-size: 18px;\n  padding: 20px;\n`;\n","import React, { useEffect, useRef, Suspense, useState } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { getCredits } from 'services/MoviesApi';\nimport { Title, FilmList, FilmItem, CardTitle } from './Cast.styled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [credits, setCredits] = useState([]);\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    getCredits(id)\n      .then(setCredits)\n      .catch(err => console.log(err));\n  }, [id]);\n\n  return (\n    <>\n      <FilmList>\n        {credits.map(\n          ({ cast_id, name, profile_path, character }) =>\n            profile_path && (\n              <FilmItem key={cast_id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                  width=\"100px\"\n                />\n                <CardTitle>\n                  <Title>{name}</Title>\n                  <p>Character: {character}</p>\n                </CardTitle>\n              </FilmItem>\n            )\n        )}\n        <Suspense fallback={null}>\n          <Outlet />\n        </Suspense>\n      </FilmList>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["Title","styled","FilmList","FilmItem","CardTitle","id","useParams","useState","credits","setCredits","isFirstRender","useRef","useEffect","current","getCredits","then","catch","err","console","log","map","cast_id","name","profile_path","character","src","alt","width","Suspense","fallback"],"sourceRoot":""}
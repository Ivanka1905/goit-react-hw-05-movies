{"version":3,"file":"static/js/382.4cdcb823.chunk.js","mappings":"iQAGaA,EAAQC,EAAAA,GAAAA,KAAH,oKAULC,EAAWD,EAAAA,GAAAA,GAAH,sHAQRE,EAAWF,EAAAA,GAAAA,GAAH,2JASRG,GAAeH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,2CAIZK,EAAWL,EAAAA,GAAAA,IAAH,4S,GAeMA,EAAAA,GAAAA,IAAH,iH,QCuBxB,EA5DmB,WACjB,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,SAC7BC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WACU,OAAdJ,GAGJA,IAAaK,EAAAA,EAAAA,IAAeL,EAAW,GAAGM,KAAKV,EAChD,GAAE,CAACI,KAUF,iCACE,UAACb,EAAD,CAAOoB,SATX,SAAsBC,GACpBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,cAAcC,QAAQC,MACtCd,EAAgB,CAAEW,MAAAA,IAClBF,EAAEG,cAAcC,QAAQC,MAAQ,EACjC,EAIG,WACE,kBAAOC,KAAK,aACZ,mBAAQC,KAAK,SAAb,uBAEDpB,IACC,iCACE,SAACN,EAAD,UACGM,EAAOqB,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAAC7B,EAAD,WACE,UAACC,EAAD,CACE6B,GAAE,UAAKH,EAAGI,YACVC,MAAO,CAAEC,KAAK,GAAD,OAAKrB,EAASsB,UAAd,OAAyBtB,EAASuB,SAFjD,WAIE,gBACEC,IACEP,EAAW,yCAC2BA,GAClC,2BAENQ,IAAKT,EACLU,MAAM,WAER,SAACnC,EAAD,UAAWyB,QAdAD,EAkBlB,OAED,SAAC,EAAAY,SAAD,CAAUC,SAAU,KAApB,UACF,SAAC,KAAD,WAMT,C","sources":["components/Pages/MoviesPages.styled.js","components/Pages/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Title = styled.form`\n  display: flex;\n  gap: 20px;\n  padding: 30px;\n  font-size: 35px;\n  font-weight: 700;\n  background-color: #ed8032;\n  color: #292c33;\n`;\n\nexport const FilmList = styled.ul`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  padding: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const FilmItem = styled.li`\n  display: block;\n  width: 200px;\n  height: 250px;\n  box-shadow: 3px 2px 2px grey;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const FilmItemLink = styled(NavLink)`\n  display: block;\n`;\n\nexport const FilmName = styled.div`\n  background: rgba(161, 21, 207, 0.5);\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background-color: rgba(245, 140, 54, 0.9);\n  color: white;\n  font-size: 14px;\n  line-height: 1.6;\n  letter-spacing: 0.03em;\n  padding: 4px;\n  text-align: center;\n`;\n\nexport const Alternative = styled.div`\n   font-size: 20px;\n  line-height: 1.6;\n  letter-spacing: 0.03em;\n  padding: 4px;\n \n`;\n","import React, { useEffect, useState, Suspense } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getSearchFilms } from 'services/MoviesApi';\nimport { Outlet } from 'react-router-dom';\nimport {\n  Title,\n  FilmList,\n  FilmItem,\n  FilmItemLink,\n  FilmName,\n} from './MoviesPages.styled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const getParams = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (getParams === null) {\n      return;\n    };\n    getParams && getSearchFilms(getParams, 1).then(setMovies);\n  }, [getParams]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const query = e.currentTarget.inputEl.value;\n    setSearchParams({ query });\n    e.currentTarget.inputEl.value = '';\n  }\n\n  return (\n    <>\n      <Title onSubmit={handleSubmit}>\n        <input name=\"inputEl\" />\n        <button type=\"submit\">Search</button>\n      </Title>\n      {movies  &&(\n        <>\n          <FilmList>\n            {movies.map(({ id, title, poster_path }) => {\n              return (\n                <FilmItem key={id}>\n                  <FilmItemLink\n                    to={`${id.toString()}`}\n                    state={{ from: `${location.pathname}${location.search}` }}\n                  >\n                    <img\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                          : '../../public/pngwing.png'\n                      }\n                      alt={title}\n                      width=\"200px\"\n                    />\n                    <FilmName>{title}</FilmName>\n                  </FilmItemLink>\n                </FilmItem>\n              );\n            })}\n          </FilmList>\n            <Suspense fallback={null}>\n          <Outlet />\n        </Suspense>\n        </>\n      ) }\n    </>\n  );\n};\n\nexport default MoviesPage;"],"names":["Title","styled","FilmList","FilmItem","FilmItemLink","NavLink","FilmName","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","getParams","get","location","useLocation","useEffect","getSearchFilms","then","onSubmit","e","preventDefault","query","currentTarget","inputEl","value","name","type","map","id","title","poster_path","to","toString","state","from","pathname","search","src","alt","width","Suspense","fallback"],"sourceRoot":""}